library(groHMM)
library(bigWig)
source("/Volumes/SEAGATE_EXP/Fisher_collaboration/scripts/GB_Functions.R")
source("/Volumes/SEAGATE_EXP/Fisher_collaboration/scripts/WaveCalling/polymeraseWaves-master/polymeraseWave_gbEdit.bw.R")
fig_dir = "/Volumes/SEAGATE_EXP/Fisher_collaboration/analysis/figures/cdk9asTC_waves/05-10-17/"
dir.create(fig_dir)
infopath = "/Volumes/SEAGATE_EXP/Fisher_collaboration/pombeinfo/"
normedBWpath = "/Volumes/SEAGATE_EXP/Fisher_collaboration/alignment_04-12-17/SpikeNormed_bw/CombinedReps/"
normedBWpath_indivReps = "/Volumes/SEAGATE_EXP/Fisher_collaboration/alignment_04-12-17/SpikeNormed_bw/"
SPmappability = load.bigWig(paste(infopath, "SPombeMappable_SacCerNonOverLap_expanded_ChrFix.bw", sep = ""))
SPGL_1kbsep = read.table(file = paste(infopath, "SP_PROcapObservedTSS_1000bpSep.bed", sep = ""), stringsAsFactors = F)
ObsTSS_NOoverlap = read.table(file = paste(infopath, "SP_PROcapObservedTSS_noOverlap.bed", sep = ""))
filteredGL = read.table(paste(infopath, "SP_CompleteFilteredGenes.bed", sep = ""))
# fix parameters here for all runs.
size = 500
upstreamDist = 500
## note to use only three states, while calling two waves, we get rid of the upstream emmission.
## Thus to initialize on the upstream window, we will adjust gene lists to "say" a gene's TSS is 500 nt upstream of observed
AdjTSS <- function(genes, upStreamDist){
plusStrand = genes[,6] == "+"
minusStrand = genes[,6]== "-"
res = genes
res[plusStrand,]$V2 = res[plusStrand,]$V2 - 500
res[minusStrand,]$V3 = res[minusStrand,]$V3 + 500
return(res)
}
zeroMinBW.pl = paste(normedBWpath, "ePROseq_Pombe_CDK9as_0min_DMSO_COMBINED_pombe_SpikeNormed_plus.bw", sep = "" )
zeroMinBW.mn = paste(normedBWpath, "ePROseq_Pombe_CDK9as_0min_DMSO_COMBINED_pombe_SpikeNormed_minus.bw", sep = "" )
halfMinBW.pl = paste(normedBWpath, "ePROseq_Pombe_CDK9as_30sec_3MBPP1_10uM_COMBINED_pombe_SpikeNormed_plus.bw", sep = "" )
halfMinBW.mn = paste(normedBWpath, "ePROseq_Pombe_CDK9as_30sec_3MBPP1_10uM_COMBINED_pombe_SpikeNormed_minus.bw", sep = "" )
oneMinBW.pl = paste(normedBWpath, "ePROseq_Pombe_CDK9as_1min_3MBPP1_10uM_COMBINED_pombe_SpikeNormed_plus.bw", sep = "" )
oneMinBW.mn = paste(normedBWpath, "ePROseq_Pombe_CDK9as_1min_3MBPP1_10uM_COMBINED_pombe_SpikeNormed_minus.bw", sep = "" )
two.5MinBW.pl = paste(normedBWpath, "ePROseq_Pombe_CDK9as_2min30sec_3MBPP1_10uM_COMBINED_pombe_SpikeNormed_plus.bw", sep = "" )
two.5MinBW.mn = paste(normedBWpath, "ePROseq_Pombe_CDK9as_2min30sec_3MBPP1_10uM_COMBINED_pombe_SpikeNormed_minus.bw", sep = "" )
fiveMinBW.pl = paste(normedBWpath, "ePROseq_Pombe_CDK9as_5min_3MBPP1_10uM_COMBINED_pombe_SpikeNormed_plus.bw", sep = "" )
fiveMinBW.mn = paste(normedBWpath, "ePROseq_Pombe_CDK9as_5min_3MBPP1_10uM_COMBINED_pombe_SpikeNormed_minus.bw", sep = "" )
SPAPB1E7.07 <- data.frame(chr = "chr01", start = 3302325, end = 3310369,
str = "+", SYMBOL = "SPAPB1E7.07", ID = "testGene",
stringsAsFactors = F)
test_1min_pw = polymeraseWaveBW(reads1_plus = zeroMinBW.pl, reads1_minus = zeroMinBW.mn,
reads2_plus = oneMinBW.pl, reads2_minus = oneMinBW.mn,
finterWindowSize = 1000, TSmooth = NA, genes = SPAPB1E7.07,
approxDist = 1500, size = 50, upstreamDist = 500,
prefix = paste(fig_dir, "1minAdvWave", sep = ""),
emissionDistAssumption = "2waves", returnVal = "alldata")
warnings()
test_1min_pw = polymeraseWaveBW(reads1_plus = zeroMinBW.pl, reads1_minus = zeroMinBW.mn,
reads2_plus = oneMinBW.pl, reads2_minus = oneMinBW.mn,
finterWindowSize = 1000, TSmooth = NA, genes = SPAPB1E7.07,
approxDist = 1500, size = 100, upstreamDist = 500,
prefix = paste(fig_dir, "1minAdvWave", sep = ""),
emissionDistAssumption = "gamma", returnVal = "alldata")
test_1min_pw
test_1min_pw = polymeraseWaveBW(reads1_plus = zeroMinBW.pl, reads1_minus = zeroMinBW.mn,
reads2_plus = oneMinBW.pl, reads2_minus = oneMinBW.mn,
finterWindowSize = 1000, TSmooth = NA, genes = SPAPB1E7.07,
approxDist = 1500, size = 100, upstreamDist = 0,
prefix = paste(fig_dir, "1minAdvWave", sep = ""),
emissionDistAssumption = "2waves", returnVal = "alldata")
test_1min_pw = polymeraseWaveBW(reads1_plus = zeroMinBW.pl, reads1_minus = zeroMinBW.mn,
reads2_plus = oneMinBW.pl, reads2_minus = oneMinBW.mn,
finterWindowSize = 1000, TSmooth = NA, genes = SPAPB1E7.07,
approxDist = 1500, size = 100, upstreamDist = 500,
prefix = paste(fig_dir, "1minAdvWave", sep = ""),
emissionDistAssumption = "2waves", returnVal = "alldata")
test_1min_pw = polymeraseWaveBW(reads1_plus = oneMinBW.pl, reads1_minus = oneMinBW.mn,
reads2_plus = zeroMinBW.pl, reads2_minus = zeroMinBW.mn,
finterWindowSize = 1000, TSmooth = NA, genes = SPAPB1E7.07,
approxDist = 1500, size = 100, upstreamDist = 500,
prefix = paste(fig_dir, "1minAdvWave", sep = ""),
emissionDistAssumption = "2waves", returnVal = "alldata")
test_1min_pw = polymeraseWaveBW(reads1_plus = oneMinBW.pl, reads1_minus = oneMinBW.mn,
reads2_plus = zeroMinBW.pl, reads2_minus = zeroMinBW.mn,
finterWindowSize = 1000, TSmooth = NA, genes = SPAPB1E7.07,
approxDist = 1500, size = 100, upstreamDist = 100,
prefix = paste(fig_dir, "1minAdvWave", sep = ""),
emissionDistAssumption = "2waves", returnVal = "alldata")
source("/Volumes/SEAGATE_EXP/Fisher_collaboration/scripts/WaveCalling/polymeraseWaves-master/polymeraseWave_gbEdit.bw_V2.0.R")
source("/Volumes/SEAGATE_EXP/Fisher_collaboration/scripts/WaveCalling/polymeraseWaves-master/polymeraseWave_gbEdit.bw_V2.0.R")
test_1min_pw = polymeraseWaveBW(reads1_plus = oneMinBW.pl, reads1_minus = oneMinBW.mn,
reads2_plus = zeroMinBW.pl, reads2_minus = zeroMinBW.mn,
finterWindowSize = 1000, TSmooth = NA, genes = SPAPB1E7.07,
approxDist = 1500, size = 100, upstreamDist = 500,
prefix = paste(fig_dir, "1minAdvWave", sep = ""),
emissionDistAssumption = "2waves", returnVal = "alldata")
warnings
warnings()
source("/Volumes/SEAGATE_EXP/Fisher_collaboration/scripts/WaveCalling/polymeraseWaves-master/polymeraseWave_gbEdit.bw_V2.0.R")
test_1min_pw = polymeraseWaveBW(reads1_plus = oneMinBW.pl, reads1_minus = oneMinBW.mn,
reads2_plus = zeroMinBW.pl, reads2_minus = zeroMinBW.mn,
finterWindowSize = 1000, TSmooth = NA, genes = SPAPB1E7.07,
approxDist = 1500, size = 100, upstreamDist = 500,
prefix = paste(fig_dir, "1minAdvWave", sep = ""),
emissionDistAssumption = "2waves", returnVal = "alldata")
source("/Volumes/SEAGATE_EXP/Fisher_collaboration/scripts/WaveCalling/polymeraseWaves-master/polymeraseWave_gbEdit.bw_V2.0.R")
test_1min_pw = polymeraseWaveBW(reads1_plus = oneMinBW.pl, reads1_minus = oneMinBW.mn,
reads2_plus = zeroMinBW.pl, reads2_minus = zeroMinBW.mn,
finterWindowSize = 1000, TSmooth = NA, genes = SPAPB1E7.07,
approxDist = 1500, size = 100, upstreamDist = 500,
prefix = paste(fig_dir, "1minAdvWave", sep = ""),
emissionDistAssumption = "2waves", returnVal = "alldata")
test_1min_pw = polymeraseWaveBW(reads1_plus = oneMinBW.pl, reads1_minus = oneMinBW.mn,
reads2_plus = zeroMinBW.pl, reads2_minus = zeroMinBW.mn,
finterWindowSize = 1000, TSmooth = NA, genes = SPAPB1E7.07,
approxDist = 1500, size = 100, upstreamDist = 500,
prefix = paste(fig_dir, "1minAdvWave", sep = ""),
emissionDistAssumption = "gamma", returnVal = "alldata")
test_1min_pw
source("/Volumes/SEAGATE_EXP/Fisher_collaboration/scripts/WaveCalling/polymeraseWaves-master/polymeraseWave_gbEdit.bw_V2.0.R")
test_1min_pw = polymeraseWaveBW(reads1_plus = oneMinBW.pl, reads1_minus = oneMinBW.mn,
reads2_plus = zeroMinBW.pl, reads2_minus = zeroMinBW.mn,
finterWindowSize = 1000, TSmooth = NA, genes = SPAPB1E7.07,
approxDist = 1500, size = 100, upstreamDist = 500,
prefix = paste(fig_dir, "1minAdvWave", sep = ""),
emissionDistAssumption = "2waves", returnVal = "alldata")
test_1min_pw = polymeraseWaveBW(reads1_plus = oneMinBW.pl, reads1_minus = oneMinBW.mn,
reads2_plus = zeroMinBW.pl, reads2_minus = zeroMinBW.mn,
finterWindowSize = 1000, TSmooth = NA, genes = SPAPB1E7.07,
approxDist = 1500, size = 500, upstreamDist = 500,
prefix = paste(fig_dir, "1minAdvWave", sep = ""),
emissionDistAssumption = "2waves", returnVal = "alldata")
RgammaMLE
source("/Volumes/SEAGATE_EXP/Fisher_collaboration/scripts/WaveCalling/polymeraseWaves-master/polymeraseWave_gbEdit.bw_V2.0.R")
test_1min_pw = polymeraseWaveBW(reads1_plus = oneMinBW.pl, reads1_minus = oneMinBW.mn,
reads2_plus = zeroMinBW.pl, reads2_minus = zeroMinBW.mn,
finterWindowSize = 1000, TSmooth = NA, genes = SPAPB1E7.07,
approxDist = 1500, size = 100, upstreamDist = 500,
prefix = paste(fig_dir, "1minAdvWave", sep = ""),
emissionDistAssumption = "2waves", returnVal = "alldata")
source("/Volumes/SEAGATE_EXP/Fisher_collaboration/scripts/WaveCalling/polymeraseWaves-master/polymeraseWave_gbEdit.bw_V2.0.R")
test_1min_pw = polymeraseWaveBW.gb(reads1_plus = oneMinBW.pl, reads1_minus = oneMinBW.mn,
reads2_plus = zeroMinBW.pl, reads2_minus = zeroMinBW.mn,
finterWindowSize = 1000, TSmooth = NA, genes = SPAPB1E7.07,
approxDist = 1500, size = 100, upstreamDist = 500,
prefix = paste(fig_dir, "1minAdvWave", sep = ""),
emissionDistAssumption = "2waves", returnVal = "alldata")
source("/Volumes/SEAGATE_EXP/Fisher_collaboration/scripts/WaveCalling/polymeraseWaves-master/polymeraseWave_gbEdit.bw_V3.0.R")
source("/Volumes/SEAGATE_EXP/Fisher_collaboration/scripts/WaveCalling/polymeraseWaves-master/polymeraseWave_gbEdit.bw_V3.0.R")
test_1min_pw = polymeraseWaveBW.gb(reads1_plus = oneMinBW.pl, reads1_minus = oneMinBW.mn,
reads2_plus = zeroMinBW.pl, reads2_minus = zeroMinBW.mn,
finterWindowSize = 1000, TSmooth = NA, genes = SPAPB1E7.07,
approxDist = 1500, size = 100, upstreamDist = 500,
prefix = paste(fig_dir, "1minAdvWave", sep = ""),
emissionDistAssumption = "2waves", returnVal = "alldata")
warnings
warnings()
source("/Volumes/SEAGATE_EXP/Fisher_collaboration/scripts/WaveCalling/polymeraseWaves-master/polymeraseWave_gbEdit.bw_V3.0.R")
test_1min_pw = polymeraseWaveBW.gb(reads1_plus = oneMinBW.pl, reads1_minus = oneMinBW.mn,
reads2_plus = zeroMinBW.pl, reads2_minus = zeroMinBW.mn,
finterWindowSize = 1000, TSmooth = NA, genes = SPAPB1E7.07,
approxDist = 1500, size = 100, upstreamDist = 500,
prefix = paste(fig_dir, "1minAdvWave", sep = ""),
emissionDistAssumption = "2waves", returnVal = "alldata")
test_1min_pw = polymeraseWaveBW(reads1_plus = oneMinBW.pl, reads1_minus = oneMinBW.mn,
reads2_plus = zeroMinBW.pl, reads2_minus = zeroMinBW.mn,
finterWindowSize = 1000, TSmooth = NA, genes = SPAPB1E7.07,
approxDist = 1500, size = 100, upstreamDist = 500,
prefix = paste(fig_dir, "1minAdvWave", sep = ""),
emissionDistAssumption = "2waves", returnVal = "alldata")
test_1min_pw
test_1min_pw = 1
test_1min_pw
test_1min_pw = polymeraseWaveBW(reads1_plus = oneMinBW.pl, reads1_minus = oneMinBW.mn,
reads2_plus = zeroMinBW.pl, reads2_minus = zeroMinBW.mn,
finterWindowSize = 1000, TSmooth = NA, genes = SPAPB1E7.07,
approxDist = 1500, size = 100, upstreamDist = 500,
prefix = paste(fig_dir, "1minAdvWave", sep = ""),
emissionDistAssumption = "2waves", returnVal = "alldata")
test_1min_pw
source("/Volumes/SEAGATE_EXP/Fisher_collaboration/scripts/WaveCalling/polymeraseWaves-master/polymeraseWave_gbEdit.bw_V3.0.R")
test_1min_pw = polymeraseWaveBW(reads1_plus = oneMinBW.pl, reads1_minus = oneMinBW.mn,
reads2_plus = zeroMinBW.pl, reads2_minus = zeroMinBW.mn,
finterWindowSize = 1000, TSmooth = NA, genes = SPAPB1E7.07,
approxDist = 1500, size = 100, upstreamDist = 500,
prefix = paste(fig_dir, "1minAdvWave", sep = ""),
emissionDistAssumption = "2waves", returnVal = "alldata")
source("/Volumes/SEAGATE_EXP/Fisher_collaboration/scripts/WaveCalling/polymeraseWaves-master/polymeraseWave_gbEdit.bw_V3.0.R")
test_1min_pw = polymeraseWaveBW(reads1_plus = oneMinBW.pl, reads1_minus = oneMinBW.mn,
reads2_plus = zeroMinBW.pl, reads2_minus = zeroMinBW.mn,
finterWindowSize = 1000, TSmooth = NA, genes = SPAPB1E7.07,
approxDist = 1500, size = 100, upstreamDist = 500,
prefix = paste(fig_dir, "1minAdvWave", sep = ""),
emissionDistAssumption = "2waves", returnVal = "alldata")
library(groHMM)
library(bigWig)
source("/Volumes/SEAGATE_EXP/Fisher_collaboration/scripts/GB_Functions.R")
source("/Volumes/SEAGATE_EXP/Fisher_collaboration/scripts/WaveCalling/polymeraseWaves-master/polymeraseWave_gbEdit.bw.R")
fig_dir = "/Volumes/SEAGATE_EXP/Fisher_collaboration/analysis/figures/cdk9asTC_waves/05-11-17/ClearingWaves_Hacked/"
dir.create(fig_dir)
infopath = "/Volumes/SEAGATE_EXP/Fisher_collaboration/pombeinfo/"
normedBWpath = "/Volumes/SEAGATE_EXP/Fisher_collaboration/alignment_04-12-17/SpikeNormed_bw/CombinedReps/"
normedBWpath_indivReps = "/Volumes/SEAGATE_EXP/Fisher_collaboration/alignment_04-12-17/SpikeNormed_bw/"
SPmappability = load.bigWig(paste(infopath, "SPombeMappable_SacCerNonOverLap_expanded_ChrFix.bw", sep = ""))
SPGL_1kbsep = read.table(file = paste(infopath, "SP_PROcapObservedTSS_1000bpSep.bed", sep = ""), stringsAsFactors = F)
ObsTSS_NOoverlap = read.table(file = paste(infopath, "SP_PROcapObservedTSS_noOverlap.bed", sep = ""))
filteredGL = read.table(paste(infopath, "SP_CompleteFilteredGenes.bed", sep = ""))
# fix parameters here for all runs.
size = 100
upstreamDist = 500
## function below will just place the CPS farther downstream, since we want the script to know where to expect signal to begin.
## it will also swap the strands of the genes, because we are going to be scanning from 3' to 5'
AdjCPS <- function(genes, downStreamDist = 500){
plusStrand = genes[,6] == "+"
minusStrand = genes[,6]== "-"
res = genes
res[plusStrand,]$V3 = res[plusStrand,]$V3 + downStreamDist
res[minusStrand,]$V2 = res[minusStrand,]$V2 - downStreamDist
res[plusStrand,]$V6 = "-"
res[minusStrand,]$V6 = "+"
return(res)
}
# load bigwigs for each time point
#zeroMinBW = list(load.bigWig(paste(normedBWpath, "ePROseq_Pombe_CDK9as_0min_DMSO_COMBINED_pombe_SpikeNormed_plus.bw", sep = "" )), load.bigWig(paste(normedBWpath, "ePROseq_Pombe_CDK9as_0min_DMSO_COMBINED_pombe_SpikeNormed_minus.bw", sep = "" )), "Cdk9as_0min_combined")
##  Combined reps
zeroMinBW.pl = paste(normedBWpath, "ePROseq_Pombe_CDK9as_0min_DMSO_COMBINED_pombe_SpikeNormed_plus.bw", sep = "" )
zeroMinBW.mn = paste(normedBWpath, "ePROseq_Pombe_CDK9as_0min_DMSO_COMBINED_pombe_SpikeNormed_minus.bw", sep = "" )
halfMinBW.pl = paste(normedBWpath, "ePROseq_Pombe_CDK9as_30sec_3MBPP1_10uM_COMBINED_pombe_SpikeNormed_plus.bw", sep = "" )
halfMinBW.mn = paste(normedBWpath, "ePROseq_Pombe_CDK9as_30sec_3MBPP1_10uM_COMBINED_pombe_SpikeNormed_minus.bw", sep = "" )
oneMinBW.pl = paste(normedBWpath, "ePROseq_Pombe_CDK9as_1min_3MBPP1_10uM_COMBINED_pombe_SpikeNormed_plus.bw", sep = "" )
oneMinBW.mn = paste(normedBWpath, "ePROseq_Pombe_CDK9as_1min_3MBPP1_10uM_COMBINED_pombe_SpikeNormed_minus.bw", sep = "" )
two.5MinBW.pl = paste(normedBWpath, "ePROseq_Pombe_CDK9as_2min30sec_3MBPP1_10uM_COMBINED_pombe_SpikeNormed_plus.bw", sep = "" )
two.5MinBW.mn = paste(normedBWpath, "ePROseq_Pombe_CDK9as_2min30sec_3MBPP1_10uM_COMBINED_pombe_SpikeNormed_minus.bw", sep = "" )
fiveMinBW.pl = paste(normedBWpath, "ePROseq_Pombe_CDK9as_5min_3MBPP1_10uM_COMBINED_pombe_SpikeNormed_plus.bw", sep = "" )
fiveMinBW.mn = paste(normedBWpath, "ePROseq_Pombe_CDK9as_5min_3MBPP1_10uM_COMBINED_pombe_SpikeNormed_minus.bw", sep = "" )
filteredGL_adjCPS = AdjCPS(filteredGL, downStreamDist = 500)
GL = filteredGL_adjCPS[,c(1,2,3,6,4,5)]
idx = (GL[,3] - GL[,2] >= 4500) # increased to
zeroMinBWr1.pl = paste(normedBWpath_indivReps, "ePROseq_Pombe_CDK9as_0min_DMSO_rep1_pombe_SpikeNormed_plus.bw", sep = "" )
zeroMinBWr1.mn = paste(normedBWpath_indivReps, "ePROseq_Pombe_CDK9as_0min_DMSO_rep1_pombe_SpikeNormed_minus.bw", sep = "" )
halfMinBWr1.pl = paste(normedBWpath_indivReps, "ePROseq_Pombe_CDK9as_30sec_3MBPP1_10uM_rep1_pombe_SpikeNormed_plus.bw", sep = "" )
halfMinBWr1.mn = paste(normedBWpath_indivReps, "ePROseq_Pombe_CDK9as_30sec_3MBPP1_10uM_rep1_pombe_SpikeNormed_minus.bw", sep = "" )
oneMinBWr1.pl = paste(normedBWpath_indivReps, "ePROseq_Pombe_CDK9as_1min_3MBPP1_10uM_rep1_pombe_SpikeNormed_plus.bw", sep = "" )
oneMinBWr1.mn = paste(normedBWpath_indivReps, "ePROseq_Pombe_CDK9as_1min_3MBPP1_10uM_rep1_pombe_SpikeNormed_minus.bw", sep = "" )
two.5MinBWr1.pl = paste(normedBWpath_indivReps, "ePROseq_Pombe_CDK9as_2min30sec_3MBPP1_10uM_rep1_pombe_SpikeNormed_plus.bw", sep = "" )
two.5MinBWr1.mn = paste(normedBWpath_indivReps, "ePROseq_Pombe_CDK9as_2min30sec_3MBPP1_10uM_rep1_pombe_SpikeNormed_minus.bw", sep = "" )
fiveMinBWr1.pl = paste(normedBWpath_indivReps, "ePROseq_Pombe_CDK9as_5min_3MBPP1_10uM_rep1_pombe_SpikeNormed_plus.bw", sep = "" )
fiveMinBWr1.mn = paste(normedBWpath_indivReps, "ePROseq_Pombe_CDK9as_5min_3MBPP1_10uM_rep1_pombe_SpikeNormed_minus.bw", sep = "" )
dir.create(paste(fig_dir, "/Rep1/", sep = ""))
dir.create(paste(fig_dir, "/Rep1/", size, "bpWindowing/", sep = ""))
pw_30sec_r1 = polymeraseWaveBW(reads1_plus = halfMinBWr1.mn, reads1_minus = halfMinBWr1.pl, reads2_plus = zeroMinBWr1.mn, reads2_minus = zeroMinBWr1.pl, finterWindowSize = 1000,
TSmooth = NA, genes = GL[idx,], approxDist = 1000, size = size, upstreamDist = upstreamDist, emissionDistAssumption = "gamma",
returnVal = "alldata")
pw_1min_r1 = polymeraseWaveBW(reads1_plus = oneMinBWr1.mn, reads1_minus = oneMinBWr1.pl, reads2_plus = zeroMinBWr1.mn, reads2_minus = zeroMinBWr1.pl, finterWindowSize = 1000,
TSmooth = NA, genes = GL[idx,], approxDist = 1500, size = size, upstreamDist = upstreamDist, emissionDistAssumption = "gamma",
returnVal = "alldata")
pw_2.5min_r1 = polymeraseWaveBW(reads1_plus = two.5MinBWr1.mn, reads1_minus = two.5MinBWr1.pl, reads2_plus = zeroMinBWr1.mn, reads2_minus = zeroMinBWr1.pl, finterWindowSize = 1000,
TSmooth = NA, genes = GL[idx,], approxDist = 2500, size = size, upstreamDist = upstreamDist, emissionDistAssumption = "gamma",
returnVal = "alldata")
pw_5min_r1 = polymeraseWaveBW(reads1_plus = fiveMinBWr1.mn, reads1_minus = fiveMinBWr1.pl, reads2_plus = zeroMinBWr1.mn, reads2_minus = zeroMinBWr1.pl, finterWindowSize = 1000,
TSmooth = NA, genes = GL[idx,], approxDist = 3500, size = size, upstreamDist = upstreamDist, emissionDistAssumption = "gamma",
returnVal = "alldata")
# save the wave calling output above to an ".RData" file in the fig_dir directory
save(pw_30sec_r1, pw_1min_r1, pw_2.5min_r1, pw_5min_r1, file = paste(fig_dir, "/Rep1/", size, "bpWindowing/", "cdk9_TCr1_ClearingWaveCalldat.RData", sep=""))
##############################################################################################################################################
# run same analysis for only bio replicate 1
##  Combined reps
zeroMinBWr2.pl = paste(normedBWpath_indivReps, "ePROseq_Pombe_CDK9as_0min_DMSO_rep2_pombe_SpikeNormed_plus.bw", sep = "" )
zeroMinBWr2.mn = paste(normedBWpath_indivReps, "ePROseq_Pombe_CDK9as_0min_DMSO_rep2_pombe_SpikeNormed_minus.bw", sep = "" )
halfMinBWr2.pl = paste(normedBWpath_indivReps, "ePROseq_Pombe_CDK9as_30sec_3MBPP1_10uM_rep2_pombe_SpikeNormed_plus.bw", sep = "" )
halfMinBWr2.mn = paste(normedBWpath_indivReps, "ePROseq_Pombe_CDK9as_30sec_3MBPP1_10uM_rep2_pombe_SpikeNormed_minus.bw", sep = "" )
oneMinBWr2.pl = paste(normedBWpath_indivReps, "ePROseq_Pombe_CDK9as_1min_3MBPP1_10uM_rep2_pombe_SpikeNormed_plus.bw", sep = "" )
oneMinBWr2.mn = paste(normedBWpath_indivReps, "ePROseq_Pombe_CDK9as_1min_3MBPP1_10uM_rep2_pombe_SpikeNormed_minus.bw", sep = "" )
two.5MinBWr2.pl = paste(normedBWpath_indivReps, "ePROseq_Pombe_CDK9as_2min30sec_3MBPP1_10uM_rep2_pombe_SpikeNormed_plus.bw", sep = "" )
two.5MinBWr2.mn = paste(normedBWpath_indivReps, "ePROseq_Pombe_CDK9as_2min30sec_3MBPP1_10uM_rep2_pombe_SpikeNormed_minus.bw", sep = "" )
fiveMinBWr2.pl = paste(normedBWpath_indivReps, "ePROseq_Pombe_CDK9as_5min_3MBPP1_10uM_rep2_pombe_SpikeNormed_plus.bw", sep = "" )
fiveMinBWr2.mn = paste(normedBWpath_indivReps, "ePROseq_Pombe_CDK9as_5min_3MBPP1_10uM_rep2_pombe_SpikeNormed_minus.bw", sep = "" )
dir.create(paste(fig_dir, "/Rep2/", sep = ""))
dir.create(paste(fig_dir, "/Rep2/", size, "bpWindowing/", sep = ""))
pw_30sec_r2 = polymeraseWaveBW(reads1_plus = halfMinBWr2.mn, reads1_minus = halfMinBWr2.pl, reads2_plus = zeroMinBWr2.mn, reads2_minus = zeroMinBWr2.pl, finterWindowSize = 1000,
TSmooth = NA, genes = GL[idx,], approxDist = 1000, size = size, upstreamDist = upstreamDist, emissionDistAssumption = "gamma",
returnVal = "alldata")
pw_1min_r2 = polymeraseWaveBW(reads1_plus = oneMinBWr2.mn, reads1_minus = oneMinBWr2.pl, reads2_plus = zeroMinBWr2.mn, reads2_minus = zeroMinBWr2.pl, finterWindowSize = 1000,
TSmooth = NA, genes = GL[idx,], approxDist = 1500, size = size, upstreamDist = upstreamDist, emissionDistAssumption = "gamma",
returnVal = "alldata")
pw_2.5min_r2 = polymeraseWaveBW(reads1_plus = two.5MinBWr2.mn, reads1_minus = two.5MinBWr2.pl, reads2_plus = zeroMinBWr2.mn, reads2_minus = zeroMinBWr2.pl, finterWindowSize = 1000,
TSmooth = NA, genes = GL[idx,], approxDist = 2500, size = size, upstreamDist = upstreamDist, emissionDistAssumption = "gamma",
returnVal = "alldata")
pw_5min_r2 = polymeraseWaveBW(reads1_plus = fiveMinBWr2.mn, reads1_minus = fiveMinBWr2.pl, reads2_plus = zeroMinBWr2.mn, reads2_minus = zeroMinBWr2.pl, finterWindowSize = 1000,
TSmooth = NA, genes = GL[idx,], approxDist = 3500, size = size, upstreamDist = upstreamDist, emissionDistAssumption = "gamma",
returnVal = "alldata")
# save the wave calling output above to an ".RData" file in the fig_dir directory
save(pw_30sec_r2, pw_1min_r2, pw_2.5min_r2, pw_5min_r2, file = paste(fig_dir, "/Rep2/", size, "bpWindowing/", "cdk9_TCr2_ClearingWaveCalldat.RData", sep=""))
